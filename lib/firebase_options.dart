// File generated by FlutterFire CLI.
// ignore_for_file: type=lint

import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

class DefaultFirebaseOptions {
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyANCABS0mx70PzbaygelqRqyGx9gFPO5gI',
    appId: '1:1018841812711:web:29c503d1582acf83a45c42',
    messagingSenderId: '1018841812711',
    projectId: 'traveltrack-90652',
    authDomain: 'traveltrack-90652.firebaseapp.com',
    storageBucket: 'traveltrack-90652.firebasestorage.app',
    measurementId: 'G-F2B3HG2T83',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBshG5Hr_uXjC7oEYS7JEODSKlhGLZsxQQ',
    appId: '1:1018841812711:android:1e234d6ad5b2a1cca45c42',
    messagingSenderId: '1018841812711',
    projectId: 'traveltrack-90652',
    storageBucket: 'traveltrack-90652.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDM9T1kSm5rQqj0ewrRQqpcVB02B2y_1Vw',
    appId: '1:1018841812711:ios:1d1453ad767011b0a45c42',
    messagingSenderId: '1018841812711',
    projectId: 'traveltrack-90652',
    storageBucket: 'traveltrack-90652.firebasestorage.app',
    iosBundleId: 'com.github.linlangli.travelTrack',
  );

  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }
}
